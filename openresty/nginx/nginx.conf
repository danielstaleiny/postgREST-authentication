# a list of env vars that nginx will make avaliable for configuration files and Lua code
env POSTGREST_HOST;
env POSTGREST_PORT;
env JWT_SECRET;
env DB_SCHEMA;
env DB_HOST;
env DB_PORT;
env DB_NAME;
env DB_USER;
env DB_PASS;
env DEVELOPMENT;

worker_processes  auto;
events {
    worker_connections  1024;
}

http {
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s; # limiting to 10MB space 1request/per second
    limit_req_zone $binary_remote_addr zone=register:10m rate=1r/s; # limiting to 10MB space 1request/per second
    limit_req_zone $binary_remote_addr zone=refresh:10m rate=1r/s; # limiting to 10MB space 1request/per second
    limit_req_status 429; # Too Many Requests

    # ssl_session_cache   shared:SSL:10m;
    # ssl_session_timeout 10m;

    # set search paths for pure Lua external libraries (';;' is the default path):
    lua_package_path '${prefix}lua/?.lua;;';
    init_by_lua_file 'lua/init_phase.lua';
    
    # a shorter log format for development
    log_format development '[$time_local] "$request" $status $body_bytes_sent "$request_time ms"';
    
    resolver 127.0.0.11 ipv6=off;

    server {
        listen 80;
        listen [::]:80;
        server_name server.rafaj.dev;
        return 301 https://$host$request_uri;
    }

    server {
        listen              443 ssl default_server;
        server_name         server.rafaj.dev;
        ssl_certificate /etc/letsencrypt/live/server.rafaj.dev/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/server.rafaj.dev/privkey.pem;
        keepalive_timeout   70;
        # listen 80 default_server;
        # server_name _;
        charset utf-8;
        # uninitialized_variable_warn off;
        

        #depending the env (production/development) switch between log formats
        set_by_lua_block $development  { return os.getenv('DEVELOPMENT') or "0" }
        set $log_development 0;
        set $log_production 0;
        if ($development = "1") {
            set $log_development 1;
        }
        if ($development = "0") {
            set $log_production 1;
        }
        access_log logs/access.log combined    if=$log_production;
        access_log logs/access.log development if=$log_development;

        error_log logs/error.log info;
        
        # enable gzip compression
        gzip on;
        gzip_disable "msie6";
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_types text/plain text/css application/json application/vnd.pgrst.object+json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
        
        include rest.conf;

        # this is the last location in the chain that points to html directory
        # this is where the files of your frontend application would go (html/javascript/css)
        location ^~ /.well-known/acme-challenge/ {
            root html;
            default_type text/plain;
            try_files $uri =404;
        }

        location /ping {
            default_type text/plain;
            content_by_lua_block {
            ngx.print("ok")
            }
        }
        location / {
            # default_type text/plain;
            # content_by_lua_block {
            # ngx.print("ok")
            # }
            include cors.conf;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-NginX-Proxy true;
            proxy_set_header X-Original_URL $uri;
            proxy_pass http://localhost:4400; # Reverse proxy to micropub nodejs
            proxy_redirect off;
        }
    }
}
